<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.my.mapper.SYSNodeMapper" >
  <resultMap id="BaseResultMap" type="com.zking.my.model.SYSNode" >
    <constructor >
      <idArg column="tree_node_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="tree_node_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="tree_node_type" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="parent_node_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="url" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="position" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="icon" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    tree_node_id, tree_node_name, tree_node_type, parent_node_id, url, position, icon
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_tree_node
    where tree_node_id = #{treeNodeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_tree_node
    where tree_node_id = #{treeNodeId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zking.my.model.SYSNode" >
    insert into t_tree_node (tree_node_id, tree_node_name, tree_node_type, 
      parent_node_id, url, position, 
      icon)
    values (#{treeNodeId,jdbcType=BIGINT}, #{treeNodeName,jdbcType=VARCHAR}, #{treeNodeType,jdbcType=BIGINT}, 
      #{parentNodeId,jdbcType=BIGINT}, #{url,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, 
      #{icon,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zking.my.model.SYSNode" >
    insert into t_tree_node
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="treeNodeId != null" >
        tree_node_id,
      </if>
      <if test="treeNodeName != null" >
        tree_node_name,
      </if>
      <if test="treeNodeType != null" >
        tree_node_type,
      </if>
      <if test="parentNodeId != null" >
        parent_node_id,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="icon != null" >
        icon,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="treeNodeId != null" >
        #{treeNodeId,jdbcType=BIGINT},
      </if>
      <if test="treeNodeName != null" >
        #{treeNodeName,jdbcType=VARCHAR},
      </if>
      <if test="treeNodeType != null" >
        #{treeNodeType,jdbcType=BIGINT},
      </if>
      <if test="parentNodeId != null" >
        #{parentNodeId,jdbcType=BIGINT},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zking.my.model.SYSNode" >
    update t_tree_node
    <set >
      <if test="treeNodeName != null" >
        tree_node_name = #{treeNodeName,jdbcType=VARCHAR},
      </if>
      <if test="treeNodeType != null" >
        tree_node_type = #{treeNodeType,jdbcType=BIGINT},
      </if>
      <if test="parentNodeId != null" >
        parent_node_id = #{parentNodeId,jdbcType=BIGINT},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
    </set>
    where tree_node_id = #{treeNodeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.my.model.SYSNode" >
    update t_tree_node
    set tree_node_name = #{treeNodeName,jdbcType=VARCHAR},
      tree_node_type = #{treeNodeType,jdbcType=BIGINT},
      parent_node_id = #{parentNodeId,jdbcType=BIGINT},
      url = #{url,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR}
    where tree_node_id = #{treeNodeId,jdbcType=BIGINT}
  </update>
</mapper>